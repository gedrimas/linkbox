stages:
  - build
  - build_docker
  - deploy

.build_template: &build_template
  stage: build
  image: node:12.3.0
  before_script:
    - npm install
  script:
    - CI=false npm run build
  artifacts:
    <<: &build_artifact_path_template
      paths:
        - ./build

build_master:
  <<: *build_template
  only:
    - master

build_dev:
  <<: *build_template
  only:
    - dev

.build_docker_template: &build_docker_template
  stage: build_docker
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_TAG: master
  script:
    - docker build -t $CI_REGISTRY_IMAGE-${IMAGE_TAG} .
  after_script:
    - docker push $CI_REGISTRY_IMAGE:${IMAGE_TAG}

build_docker_master:
  <<: *build_docker_template
  only:
    - master

build_docker_dev:
  <<: *build_docker_template
  variables:
    IMAGE_TAG: dev
  only:
    - dev

.deploy_template: &deploy_template
  stage: deploy
  image: alpine-ssh-client
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - scp docker-compose.yml root@mylinkbox.ru:~/${PROJECT_NAME}/docker-compose.yml
    - ssh root@mylinkbox.ru "cd ~/${PROJECT_NAME} && docker-compose up -d"

deploy_master:
  <<: *deploy_template
  before_script:
    - echo "master"
  only:
    - master
